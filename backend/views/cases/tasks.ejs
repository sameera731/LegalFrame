<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %> - LegalFrame</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        body {
            background: linear-gradient(135deg, #3b0a45, #a1027e);
            min-height: 100vh;
        }
        .main-container {
            background: rgba(255, 255, 255, 0.95);
            border-radius: 15px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
            margin: 20px;
            padding: 30px;
        }
        .kanban-column {
            background: #f8f9fa;
            border-radius: 10px;
            padding: 15px;
            min-height: 500px;
        }
        .task-card {
            background: white;
            border: 1px solid #e0e0e0;
            border-radius: 8px;
            padding: 15px;
            margin-bottom: 10px;
            cursor: move;
            transition: all 0.3s ease;
        }
        .task-card:hover {
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        }
        .priority-high { border-left: 4px solid #dc3545; }
        .priority-medium { border-left: 4px solid #ffc107; }
        .priority-low { border-left: 4px solid #28a745; }
        .btn-purple {
            background: linear-gradient(135deg, #6a0572, #9d0191);
            border: none;
            color: white;
        }
        .btn-purple:hover {
            background: linear-gradient(135deg, #5a0462, #8d0181);
            color: white;
        }
        .status-todo { background-color: #e3f2fd; }
        .status-progress { background-color: #fff3e0; }
        .status-blocked { background-color: #ffebee; }
        .status-done { background-color: #e8f5e8; }
    </style>
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
        <div class="container-fluid">
            <a class="navbar-brand" href="/">LegalFrame</a>
            <div class="navbar-nav ms-auto">
                <a class="nav-link" href="/cases">Cases</a>
                <a class="nav-link" href="/auth/logout">Logout</a>
            </div>
        </div>
    </nav>

    <div class="main-container">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <div>
                <h2><i class="fas fa-tasks"></i> <%= title %></h2>
                <p class="text-muted mb-0">Case: <%= caseItem.title %></p>
            </div>
            <div>
                <button class="btn btn-purple" data-bs-toggle="modal" data-bs-target="#addTaskModal">
                    <i class="fas fa-plus"></i> Add Task
                </button>
                <a href="/cases/<%= caseItem.case_id %>/members" class="btn btn-outline-primary ms-2">
                    <i class="fas fa-users"></i> View Members
                </a>
                <button class="btn btn-outline-info ms-2" onclick="quickAddMember('<%= caseItem.case_id %>', '<%= caseItem.title %>')">
                    <i class="fas fa-user-plus"></i> Quick Add Member
                </button>
                <a href="/cases" class="btn btn-outline-secondary ms-2">
                    <i class="fas fa-arrow-left"></i> Back to Cases
                </a>
            </div>
        </div>

        <!-- Kanban Board -->
        <div class="row">
            <div class="col-md-3">
                <div class="kanban-column status-todo">
                    <h5 class="text-center mb-3">
                        <i class="fas fa-clipboard-list"></i> To Do
                        <span class="badge bg-primary"><%= tasks['To Do'].length %></span>
                    </h5>
                    <div id="todo-column">
                        <% tasks['To Do'].forEach(task => { %>
                            <div class="task-card priority-<%= task.priority.toLowerCase() %>" data-task-id="<%= task.task_id %>">
                                <div class="d-flex justify-content-between align-items-start mb-2">
                                    <h6 class="mb-1"><%= task.title %></h6>
                                    <div class="dropdown">
                                        <button class="btn btn-sm btn-outline-secondary" type="button" data-bs-toggle="dropdown">
                                            <i class="fas fa-ellipsis-v"></i>
                                        </button>
                                        <ul class="dropdown-menu">
                                            <li><a class="dropdown-item" href="#" onclick="editTask('<%= task.task_id %>')">Edit</a></li>
                                            <li><a class="dropdown-item text-danger" href="#" onclick="deleteTask('<%= task.task_id %>')">Delete</a></li>
                                        </ul>
                                    </div>
                                </div>
                                <p class="text-muted small mb-2"><%= task.description %></p>
                                <div class="d-flex justify-content-between align-items-center">
                                    <small class="text-muted">
                                        <% if (task.assignee_name) { %>
                                            <i class="fas fa-user"></i> <%= task.assignee_name %>
                                        <% } else { %>
                                            <i class="fas fa-user"></i> Unassigned
                                        <% } %>
                                    </small>
                                    <span class="badge bg-<%= task.priority === 'High' ? 'danger' : task.priority === 'Medium' ? 'warning' : 'success' %>">
                                        <%= task.priority %>
                                    </span>
                                </div>
                                <% if (task.due_date) { %>
                                    <small class="text-muted">
                                        <i class="fas fa-calendar"></i> <%= new Date(task.due_date).toLocaleDateString() %>
                                    </small>
                                <% } %>
                            </div>
                        <% }); %>
                    </div>
                </div>
            </div>

            <div class="col-md-3">
                <div class="kanban-column status-progress">
                    <h5 class="text-center mb-3">
                        <i class="fas fa-play-circle"></i> In Progress
                        <span class="badge bg-warning"><%= tasks['In Progress'].length %></span>
                    </h5>
                    <div id="progress-column">
                        <% tasks['In Progress'].forEach(task => { %>
                            <div class="task-card priority-<%= task.priority.toLowerCase() %>" data-task-id="<%= task.task_id %>">
                                <div class="d-flex justify-content-between align-items-start mb-2">
                                    <h6 class="mb-1"><%= task.title %></h6>
                                    <div class="dropdown">
                                        <button class="btn btn-sm btn-outline-secondary" type="button" data-bs-toggle="dropdown">
                                            <i class="fas fa-ellipsis-v"></i>
                                        </button>
                                        <ul class="dropdown-menu">
                                            <li><a class="dropdown-item" href="#" onclick="editTask('<%= task.task_id %>')">Edit</a></li>
                                            <li><a class="dropdown-item text-danger" href="#" onclick="deleteTask('<%= task.task_id %>')">Delete</a></li>
                                        </ul>
                                    </div>
                                </div>
                                <p class="text-muted small mb-2"><%= task.description %></p>
                                <div class="d-flex justify-content-between align-items-center">
                                    <small class="text-muted">
                                        <% if (task.assignee_name) { %>
                                            <i class="fas fa-user"></i> <%= task.assignee_name %>
                                        <% } else { %>
                                            <i class="fas fa-user"></i> Unassigned
                                        <% } %>
                                    </small>
                                    <span class="badge bg-<%= task.priority === 'High' ? 'danger' : task.priority === 'Medium' ? 'warning' : 'success' %>">
                                        <%= task.priority %>
                                    </span>
                                </div>
                                <% if (task.due_date) { %>
                                    <small class="text-muted">
                                        <i class="fas fa-calendar"></i> <%= new Date(task.due_date).toLocaleDateString() %>
                                    </small>
                                <% } %>
                            </div>
                        <% }); %>
                    </div>
                </div>
            </div>

            <div class="col-md-3">
                <div class="kanban-column status-blocked">
                    <h5 class="text-center mb-3">
                        <i class="fas fa-exclamation-triangle"></i> Blocked
                        <span class="badge bg-danger"><%= tasks['Blocked'].length %></span>
                    </h5>
                    <div id="blocked-column">
                        <% tasks['Blocked'].forEach(task => { %>
                            <div class="task-card priority-<%= task.priority.toLowerCase() %>" data-task-id="<%= task.task_id %>">
                                <div class="d-flex justify-content-between align-items-start mb-2">
                                    <h6 class="mb-1"><%= task.title %></h6>
                                    <div class="dropdown">
                                        <button class="btn btn-sm btn-outline-secondary" type="button" data-bs-toggle="dropdown">
                                            <i class="fas fa-ellipsis-v"></i>
                                        </button>
                                        <ul class="dropdown-menu">
                                            <li><a class="dropdown-item" href="#" onclick="editTask('<%= task.task_id %>')">Edit</a></li>
                                            <li><a class="dropdown-item text-danger" href="#" onclick="deleteTask('<%= task.task_id %>')">Delete</a></li>
                                        </ul>
                                    </div>
                                </div>
                                <p class="text-muted small mb-2"><%= task.description %></p>
                                <div class="d-flex justify-content-between align-items-center">
                                    <small class="text-muted">
                                        <% if (task.assignee_name) { %>
                                            <i class="fas fa-user"></i> <%= task.assignee_name %>
                                        <% } else { %>
                                            <i class="fas fa-user"></i> Unassigned
                                        <% } %>
                                    </small>
                                    <span class="badge bg-<%= task.priority === 'High' ? 'danger' : task.priority === 'Medium' ? 'warning' : 'success' %>">
                                        <%= task.priority %>
                                    </span>
                                </div>
                                <% if (task.due_date) { %>
                                    <small class="text-muted">
                                        <i class="fas fa-calendar"></i> <%= new Date(task.due_date).toLocaleDateString() %>
                                    </small>
                                <% } %>
                            </div>
                        <% }); %>
                    </div>
                </div>
            </div>

            <div class="col-md-3">
                <div class="kanban-column status-done">
                    <h5 class="text-center mb-3">
                        <i class="fas fa-check-circle"></i> Done
                        <span class="badge bg-success"><%= tasks['Done'].length %></span>
                    </h5>
                    <div id="done-column">
                        <% tasks['Done'].forEach(task => { %>
                            <div class="task-card priority-<%= task.priority.toLowerCase() %>" data-task-id="<%= task.task_id %>">
                                <div class="d-flex justify-content-between align-items-start mb-2">
                                    <h6 class="mb-1"><%= task.title %></h6>
                                    <div class="dropdown">
                                        <button class="btn btn-sm btn-outline-secondary" type="button" data-bs-toggle="dropdown">
                                            <i class="fas fa-ellipsis-v"></i>
                                        </button>
                                        <ul class="dropdown-menu">
                                            <li><a class="dropdown-item" href="#" onclick="editTask('<%= task.task_id %>')">Edit</a></li>
                                            <li><a class="dropdown-item text-danger" href="#" onclick="deleteTask('<%= task.task_id %>')">Delete</a></li>
                                        </ul>
                                    </div>
                                </div>
                                <p class="text-muted small mb-2"><%= task.description %></p>
                                <div class="d-flex justify-content-between align-items-center">
                                    <small class="text-muted">
                                        <% if (task.assignee_name) { %>
                                            <i class="fas fa-user"></i> <%= task.assignee_name %>
                                        <% } else { %>
                                            <i class="fas fa-user"></i> Unassigned
                                        <% } %>
                                    </small>
                                    <span class="badge bg-<%= task.priority === 'High' ? 'danger' : task.priority === 'Medium' ? 'warning' : 'success' %>">
                                        <%= task.priority %>
                                    </span>
                                </div>
                                <% if (task.due_date) { %>
                                    <small class="text-muted">
                                        <i class="fas fa-calendar"></i> <%= new Date(task.due_date).toLocaleDateString() %>
                                    </small>
                                <% } %>
                            </div>
                        <% }); %>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Add Task Modal -->
    <div class="modal fade" id="addTaskModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Add New Task</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <form id="addTaskForm">
                    <div class="modal-body">
                        <div class="mb-3">
                            <label for="title" class="form-label">Task Title *</label>
                            <input type="text" class="form-control" id="title" name="title" required>
                        </div>
                        <div class="mb-3">
                            <label for="description" class="form-label">Description</label>
                            <textarea class="form-control" id="description" name="description" rows="3"></textarea>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <label for="assignee_id" class="form-label">Assignee</label>
                                <select class="form-select" id="assignee_id" name="assignee_id">
                                    <option value="">Unassigned</option>
                                    <% members.forEach(member => { %>
                                        <option value="<%= member.user_id %>">
                                            <%= member.first_name %> <%= member.last_name %>
                                        </option>
                                    <% }); %>
                                </select>
                            </div>
                            <div class="col-md-6">
                                <label for="priority" class="form-label">Priority</label>
                                <select class="form-select" id="priority" name="priority">
                                    <option value="Low">Low</option>
                                    <option value="Medium" selected>Medium</option>
                                    <option value="High">High</option>
                                </select>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="due_date" class="form-label">Due Date</label>
                            <input type="date" class="form-control" id="due_date" name="due_date">
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-purple">Create Task</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Quick Add Member Modal -->
    <div class="modal fade" id="quickAddMemberModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Quick Add Member</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <form id="quickAddMemberForm">
                    <div class="modal-body">
                        <input type="hidden" id="quickCaseId" name="case_id">
                        <div class="mb-3">
                            <label for="quickUserSelect" class="form-label">Select User</label>
                            <select class="form-select" id="quickUserSelect" name="user_id" required>
                                <option value="">Choose a user...</option>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label for="quickRoleSelect" class="form-label">Role in Case</label>
                            <select class="form-select" id="quickRoleSelect" name="role_in_case" required>
                                <option value="Associate">Associate</option>
                                <option value="Lead">Lead</option>
                                <option value="Paralegal">Paralegal</option>
                                <option value="Client">Client</option>
                                <option value="Observer">Observer</option>
                            </select>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-purple">Add Member</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sortablejs@1.15.0/Sortable.min.js"></script>
    <script>
        // Initialize sortable for each column
        new Sortable(document.getElementById('todo-column'), {
            group: 'tasks',
            animation: 150,
            onEnd: function(evt) {
                updateTaskStatus(evt.item.dataset.taskId, 'To Do');
            }
        });

        new Sortable(document.getElementById('progress-column'), {
            group: 'tasks',
            animation: 150,
            onEnd: function(evt) {
                updateTaskStatus(evt.item.dataset.taskId, 'In Progress');
            }
        });

        new Sortable(document.getElementById('blocked-column'), {
            group: 'tasks',
            animation: 150,
            onEnd: function(evt) {
                updateTaskStatus(evt.item.dataset.taskId, 'Blocked');
            }
        });

        new Sortable(document.getElementById('done-column'), {
            group: 'tasks',
            animation: 150,
            onEnd: function(evt) {
                updateTaskStatus(evt.item.dataset.taskId, 'Done');
            }
        });

        function updateTaskStatus(taskId, status) {
            fetch(`/tasks/${taskId}/status`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ status: status })
            })
            .then(response => response.json())
            .then(data => {
                if (!data.success) {
                    console.error('Error updating task status:', data.error);
                    location.reload(); // Reload to reset position
                }
            })
            .catch(error => {
                console.error('Error:', error);
                location.reload();
            });
        }

        document.getElementById('addTaskForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const formData = new FormData(this);
            const data = Object.fromEntries(formData);
            
            fetch(`/cases/<%= caseItem.case_id %>/tasks`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(data)
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    location.reload();
                } else {
                    alert('Error creating task: ' + (data.error || 'Unknown error'));
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Error creating task');
            });
        });

        function deleteTask(taskId) {
            if (confirm('Are you sure you want to delete this task?')) {
                fetch(`/tasks/${taskId}`, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json',
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        location.reload();
                    } else {
                        alert('Error deleting task: ' + (data.error || 'Unknown error'));
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Error deleting task');
                });
            }
        }

        function editTask(taskId) {
            // This would open an edit modal - for now just show an alert
            alert('Edit functionality coming soon!');
        }

        function quickAddMember(caseId, caseTitle) {
            document.getElementById('quickCaseId').value = caseId;
            document.querySelector('#quickAddMemberModal .modal-title').textContent = `Add Member to: ${caseTitle}`;
            
            // Load available users for this case
            fetch(`/api/cases/${caseId}/available-users`)
                .then(response => response.json())
                .then(users => {
                    const select = document.getElementById('quickUserSelect');
                    select.innerHTML = '<option value="">Choose a user...</option>';
                    users.forEach(user => {
                        const option = document.createElement('option');
                        option.value = user.user_id;
                        option.textContent = `${user.first_name} ${user.last_name} (${user.email}) - ${user.role}`;
                        select.appendChild(option);
                    });
                })
                .catch(error => {
                    console.error('Error loading users:', error);
                    alert('Error loading available users');
                });
            
            new bootstrap.Modal(document.getElementById('quickAddMemberModal')).show();
        }

        // Quick Add Member Form
        document.getElementById('quickAddMemberForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const formData = new FormData(this);
            const data = Object.fromEntries(formData);
            const caseId = data.case_id;
            
            fetch(`/cases/${caseId}/members`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(data)
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    location.reload();
                } else {
                    alert('Error adding member: ' + (data.error || 'Unknown error'));
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Error adding member');
            });
        });
    </script>
</body>
</html>
